import{Qb as v,Yb as E}from"./chunk-GWUVAKX4.js";import{m as c}from"./chunk-HBMWL2L6.js";import{a as n,b as d}from"./chunk-TEXQAPAF.js";import{a as C,c as b}from"./chunk-IEY2ZFRQ.js";import{a}from"./chunk-GYYECUZK.js";import{Hd as g,Id as y,Jd as R,Nd as A,bc as u,sd as f,td as h}from"./chunk-MP5PPKB7.js";import{f as s,h as t,n as o}from"./chunk-YJSZZTEX.js";t();o();var q=s(a());t();o();var m=s(a());var M=async()=>{let e=c("serviceWorkerMutexAcquire",void 0),r=d(await m.default.runtime.sendMessage(n(e)));if("error"in r)throw new Error(r.error.message);return()=>{let i=c("serviceWorkerMutexRelease",void 0);m.default.runtime.sendMessage(n(i))}},x=async e=>{let r=await M();try{return await e()}finally{r()}};t();o();var k=s(a()),W=async(e,r,i)=>{let p=await k.default.identity.launchWebAuthFlow({interactive:i,url:r});if(!R(e,p))return y(e,p);throw new Error("Error fetching auth code")};var l=E(),P={getClientID:A,redirectURL:q.default.identity.getRedirectURL(),fetchAuthorizationCode:(e,r,i)=>W(e,r,i)},S={storage:new C,signer:{sign:(e,r)=>f(l,e,r),getAuthenticationPublicKey:e=>l.getAuthenticationPublicKey(e),getAllSecretIdentifiers:()=>h(l)},authConfig:P,queryClient:v,runExclusive:x,isLocalTokenValidityCheckEnabled:()=>!u.isFeatureEnabled("kill-frontend-local-check"),isServerTimeEnabled:()=>!u.isFeatureEnabled("kill-frontend-server-time")},T=g(S);T.subscribe("userID",e=>{b.addUserProperties({authUserId:e})});export{T as a};
//# sourceMappingURL=chunk-6EMLS5WZ.js.map
